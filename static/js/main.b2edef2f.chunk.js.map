{"version":3,"sources":["components/BankAccount/Controls/Controls.module.css","components/BankAccount/Balance/Balance.module.css","components/BankAccount/TransactionHistory/Transactions.module.css","components/App/App.module.css","components/BankAccount/Controls/Controls.js","components/BankAccount/Balance/Balance.js","components/BankAccount/TransactionHistory/Transactions.js","services/localStorage.js","components/BankAccount/Dashboard/Dashboard.js","components/App/App.js","index.js"],"names":["module","exports","toast","configure","Controls","state","moneyAmount","handleDeposit","props","onDeposit","setState","handleWithdraw","onWithdraw","handleChange","e","currentTarget","value","this","className","styles","controls","type","name","onChange","onClick","Component","Balance","balance","income","expenses","Transactions","items","length","history","map","item","key","id","amount","date","defaultProps","localStorage","setItem","JSON","stringify","err","Error","notesFromLS","getItem","parse","console","log","Transaction","DEPOSIT","WITHDRAW","Message","NOT_ENOUGH_MONEY","ENTER_THE_AMOUNT","SUCCESSFULL","Dashboard","transactions","createTransaction","transactionType","Date","amountConvertToFloat","parseFloat","shortid","generate","toLocaleString","transaction","success","error","countMoneyFlow","reduce","acc","Deposit","Withdraw","storage","prevProps","prevState","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2edef2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1z4JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__QxMg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"Transactions_history__2GGm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\",\"App-logo\":\"App_App-logo__1UFaS\",\"App-header\":\"App_App-header__23Gt-\",\"App-link\":\"App_App-link__1ic5L\"};","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport { toast } from 'react-toastify';\nimport styles from './Controls.module.css';\n\ntoast.configure();\n\nclass Controls extends Component {\n  static propTypes = {\n    onDeposit: T.func.isRequired,\n    onWithdraw: T.func.isRequired,\n  };\n\n  state = {\n    moneyAmount: 0,\n  };\n\n  handleDeposit = () => {\n    this.props.onDeposit(this.state.moneyAmount);\n    this.setState({ moneyAmount: 0 });\n  };\n\n  handleWithdraw = () => {\n    this.props.onWithdraw(this.state.moneyAmount);\n    this.setState({ moneyAmount: 0 });\n  };\n\n  handleChange = e => {\n    this.setState({\n      moneyAmount: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const { moneyAmount } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          value={moneyAmount}\n          onChange={this.handleChange}\n        />\n        <button type=\"button\" onClick={this.handleDeposit}>\n          Deposit\n        </button>\n        <button type=\"button\" onClick={this.handleWithdraw}>\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => {\n  return (\n    <section className={styles.balance}>\n      <span>&#8593; </span>\n      <span>{income}$</span>\n      <span>&#8595; </span>\n      <span>{expenses}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: T.number.isRequired,\n  income: T.number.isRequired,\n  expenses: T.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Transactions.module.css';\n\nconst Transactions = ({ items }) => {\n  return (\n    <>\n      {items.length > 0 && (\n        <table className={styles.history}>\n          <thead>\n            <tr>\n              <th>Transaction</th>\n              <th>Amount</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map(item => (\n              <tr key={item.id}>\n                <td>{item.type}</td>\n                <td>{item.amount}$</td>\n                <td>{item.date}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\nTransactions.defaultProps = {\n  items: [\n    {\n      id: 'default',\n      type: 'No transactions yet',\n      amount: '0',\n      date: '-',\n    },\n  ],\n};\n\nTransactions.propTypes = {\n  items: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.number.isRequired,\n      date: T.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default Transactions;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    throw new Error();\n  }\n};\n\nconst get = key => {\n  try {\n    const notesFromLS = localStorage.getItem(key);\n    return notesFromLS ? JSON.parse(notesFromLS) : null;\n  } catch (err) {\n    console.log(err);\n  }\n\n  return null;\n};\n\nexport default { save, get };\n","/*eslint-disable */\nimport React, { Component } from 'react';\nimport T from 'prop-types';\nimport shortid from 'shortid';\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport Transactions from '../TransactionHistory';\nimport { toast } from 'react-toastify';\nimport storage from '../../../services/localStorage';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nconst Transaction = {\n  DEPOSIT: 'Deposit',\n  WITHDRAW: 'Withdraw',\n};\n\nconst Message = {\n  NOT_ENOUGH_MONEY: 'На счету недостаточно средств для проведения операции!',\n  ENTER_THE_AMOUNT: 'Введите сумму для проведения операции!',\n  SUCCESSFULL: 'Транзакция прошла успешно!',\n};\n\nclass Dashboard extends Component {\n  static defaultProps = {\n    transactions: [],\n    balance: 0,\n  };\n\n  static propTypes = {\n    transactions: T.arrayOf(\n      T.shape({\n        id: T.string.isRequired,\n        type: T.string.isRequired,\n        amount: T.number.isRequired,\n        date: T.string.isRequired,\n      }).isRequired,\n    ),\n    balance: T.number,\n  };\n\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const transactions = storage.get('transactions');\n    const balance = storage.get('balance');\n    if (transactions && balance) {\n      this.setState({ transactions, balance });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transactions !== this.state.transactions) {\n      storage.save('transactions', this.state.transactions);\n      storage.save('balance', this.state.balance);\n    }\n  }\n\n  createTransaction = (amount, transactionType) => {\n    const date = new Date();\n    const amountConvertToFloat = parseFloat(amount);\n    const transaction = {\n      id: shortid.generate(),\n      type: transactionType,\n      amount: amountConvertToFloat,\n      date: date.toLocaleString(),\n    };\n\n    return transaction;\n  };\n\n  onDeposit = amount => {\n    if (amount === '' || amount <= 0) {\n      toast(Message.ENTER_THE_AMOUNT);\n      return;\n    }\n    const transaction = this.createTransaction(amount, Transaction.DEPOSIT);\n    this.setState(state => ({\n      transactions: [...state.transactions, transaction],\n      balance: state.balance + transaction.amount,\n    }));\n    toast.success(Message.SUCCESSFULL);\n  };\n\n  onWithdraw = amount => {\n    if (amount === '' || amount <= 0) {\n      toast(Message.ENTER_THE_AMOUNT);\n      return;\n    }\n    if (amount > this.state.balance) {\n      toast.error(Message.NOT_ENOUGH_MONEY);\n      return;\n    }\n    const transaction = this.createTransaction(amount, Transaction.WITHDRAW);\n\n    this.setState(state => ({\n      transactions: [...state.transactions, transaction],\n      balance: state.balance - transaction.amount,\n    }));\n    toast.success(Message.SUCCESSFULL);\n  };\n\n  countMoneyFlow = () => {\n    const { transactions } = this.state;\n\n    return transactions.reduce(\n      (acc, transaction) => {\n        acc[transaction.type] += transaction.amount;\n        return acc;\n      },\n      {\n        Deposit: 0,\n        Withdraw: 0,\n      },\n    );\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    const income = this.countMoneyFlow().Deposit;\n    const expenses = this.countMoneyFlow().Withdraw;\n    return (\n      <div className=\"dashboard\">\n        <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <Transactions items={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.module.css';\nimport Dashboard from '../BankAccount/Dashboard';\n\nconst App = () => {\n  return <Dashboard />;\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}